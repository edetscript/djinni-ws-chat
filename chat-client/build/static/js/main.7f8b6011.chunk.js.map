{"version":3,"sources":["App.js","index.js"],"names":["App","messages","setMessages","useState","message","setMessage","isUploading","setIsUploading","file","setFile","username","setUsername","localStorage","getItem","fileInputRef","useRef","textareaRef","isUsernameSet","setIsUsernameSet","autoGrowTextarea","textarea","current","style","height","concat","scrollHeight","ws","useEffect","WebSocket","process","onmessage","event","data","JSON","parse","type","prevMessages","close","handleUsernameSubmit","setItem","_jsx","className","children","_jsxs","map","msg","index","fileUrl","some","ext","_msg$fileName","fileName","toLowerCase","endsWith","href","target","rel","src","alt","width","onClick","handleUploadClick","click","title","viewBox","focusable","fill","d","ref","placeholder","value","onChange","e","async","formData","FormData","append","response","fetch","method","body","json","name","messageData","send","stringify","disabled","files","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f8b6011.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\n    localStorage.getItem(\"username\") || \"\"\n  );\n  const fileInputRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleTextareaChange = (e) => {\n    setMessage(e.target.value);\n    autoGrowTextarea();\n  };\n\n  const [isUsernameSet, setIsUsernameSet] = useState(\n    !!localStorage.getItem(\"username\")\n  );\n\n  const autoGrowTextarea = () => {\n    const textarea = textareaRef.current;\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n  const ws = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n\n    ws.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"pastMessages\") {\n        setMessages(data.data);\n      } else {\n        setMessages((prevMessages) => [...prevMessages, data]);\n      }\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  const sendMessage = async () => {\n    setIsUploading(true);\n    let fileUrl = \"\";\n    let fileName = \"\";\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(process.env.REACT_APP_UPLOAD_URL, {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await response.json();\n\n      fileUrl = data.fileUrl;\n      fileName = file.name;\n    }\n\n    const messageData = { username, message, fileUrl, fileName };\n\n    ws.current.send(JSON.stringify(messageData));\n    setMessage(\"\");\n    setFile(null);\n    setIsUploading(false);\n  };\n\n  useEffect(() => {\n    autoGrowTextarea();\n  }, [message]);\n\n  const handleUsernameSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    setIsUsernameSet(true);\n  };\n\n  if (!isUsernameSet) {\n    return (\n      <div className=\"username-container\">\n        <h4>Pick a username</h4>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <button onClick={handleUsernameSubmit} disabled={!username}>\n          Join Chat\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">\n          <h1>Открыть чат</h1>\n        </div>\n        <div className=\"chat-window\">\n          {messages.map((msg, index) => (\n            <div\n              className={`chat-message ${\n                msg.username === username ? \"own-message\" : \"\"\n              }`}\n              key={index}\n            >\n              <strong>\n                <small>{msg.username}</small>\n              </strong>\n              <br />\n              {msg.message}\n              {msg.fileUrl && (\n                <ul>\n                  {[\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\", \".svg\"].some(\n                    (ext) => msg?.fileName?.toLowerCase().endsWith(ext)\n                  ) ? (\n                    <li>\n                      <a\n                        href={msg.fileUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img\n                          className=\"uploaded-image\"\n                          src={msg.fileUrl}\n                          alt={msg.fileName}\n                          width=\"80px\"\n                        />\n                      </a>\n                    </li>\n                  ) : (\n                    <li className=\"uploaded-file\">\n                      <a\n                        href={msg.fileUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {msg.fileName}\n                      </a>\n                    </li>\n                  )}\n                </ul>\n              )}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input-wrapper\">\n          <div className=\"chat-editor-upload\">\n            <button\n              className=\"plus-icon\"\n              onClick={handleUploadClick}\n              title=\"Загрузить файл\"\n            >\n              <svg\n                enable-background=\"new 0 0 24 24\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                width=\"20\"\n                focusable=\"false\"\n              >\n                <g>\n                  <rect fill=\"none\" height=\"20\" width=\"20\"></rect>\n                </g>\n                <g>\n                  <g>\n                    <g>\n                      <path d=\"M6,2C4.9,2,4.01,2.9,4.01,4L4,20c0,1.1,0.89,2,1.99,2H18c1.1,0,2-0.9,2-2V8l-6-6H6z M13,9V3.5L18.5,9H13z\"></path>\n                    </g>\n                  </g>\n                </g>\n              </svg>\n            </button>\n          </div>\n          <div className=\"padding-10\">\n            <div className=\"chat-input\">\n              <textarea\n                ref={textareaRef}\n                placeholder=\"Введите сообщение...\"\n                value={message}\n                onChange={handleTextareaChange}\n              />\n\n              <button onClick={sendMessage} disabled={!message && !file}>\n                {isUploading ? \"Отправка...\" : \"Отправлять\"}\n              </button>\n            </div>\n            <small>{file?.name}</small>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            className=\"hidden\"\n            onChange={(e) => setFile(e.target.files[0])}\n          />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}