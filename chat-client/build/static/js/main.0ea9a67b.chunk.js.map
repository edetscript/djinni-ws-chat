{"version":3,"sources":["App.js","index.js"],"names":["App","messages","setMessages","useState","message","setMessage","isUploading","setIsUploading","file","setFile","username","setUsername","localStorage","getItem","isUsernameSet","setIsUsernameSet","ws","useRef","useEffect","current","WebSocket","process","onmessage","event","data","JSON","parse","type","prevMessages","close","handleUsernameSubmit","setItem","_jsx","className","children","_jsxs","map","msg","index","concat","fileUrl","some","ext","_msg$fileName","fileName","toLowerCase","endsWith","href","target","rel","src","alt","width","placeholder","value","onChange","e","files","onClick","async","formData","FormData","append","response","fetch","method","body","json","name","messageData","send","stringify","disabled","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ea9a67b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\n    localStorage.getItem(\"username\") || \"\"\n  );\n  const [isUsernameSet, setIsUsernameSet] = useState(\n    !!localStorage.getItem(\"username\")\n  );\n  const ws = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n\n    ws.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"pastMessages\") {\n        setMessages(data.data);\n      } else {\n        setMessages((prevMessages) => [...prevMessages, data]);\n      }\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  const sendMessage = async () => {\n    setIsUploading(true);\n    let fileUrl = \"\";\n    let fileName = \"\";\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(process.env.REACT_APP_UPLOAD_URL, {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await response.json();\n\n      fileUrl = data.fileUrl;\n      fileName = file.name;\n    }\n\n    const messageData = { username, message, fileUrl, fileName };\n\n    ws.current.send(JSON.stringify(messageData));\n    setMessage(\"\");\n    setFile(null);\n    setIsUploading(false);\n  };\n\n  const handleUsernameSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    setIsUsernameSet(true);\n  };\n\n  if (!isUsernameSet) {\n    return (\n      <div className=\"username-container\">\n        <h4>Pick a username</h4>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <button onClick={handleUsernameSubmit} disabled={!username}>\n          Join Chat\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">\n          <h1>Group Chat</h1>\n        </div>\n        <div className=\"chat-window\">\n          {messages.map((msg, index) => (\n            <div\n              className={`chat-message ${\n                msg.username === username ? \"own-message\" : \"\"\n              }`}\n              key={index}\n            >\n              <strong>\n                <small>{msg.username}</small>\n              </strong>\n              <br />\n              {msg.message}\n              {msg.fileUrl && (\n                <div>\n                  {[\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\", \".svg\"].some(\n                    (ext) => msg?.fileName?.toLowerCase().endsWith(ext)\n                  ) ? (\n                    <a\n                      href={msg.fileUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <img src={msg.fileUrl} alt={msg.fileName} width=\"80px\" />\n                    </a>\n                  ) : (\n                    <a\n                      href={msg.fileUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {msg.fileName}\n                    </a>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input\">\n          <textarea\n            placeholder=\"Type your message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n          <button onClick={sendMessage} disabled={!message && !file}>\n            {isUploading ? \"Sending...\" : \"Send\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}